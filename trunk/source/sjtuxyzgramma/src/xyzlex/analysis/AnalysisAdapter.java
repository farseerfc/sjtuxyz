/* This file was generated by SableCC (http://www.sablecc.org/). */

package xyzlex.analysis;

import java.util.*;
import xyzlex.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAClassProgram(AClassProgram node)
    {
        defaultCase(node);
    }

    public void caseABodyProgram(ABodyProgram node)
    {
        defaultCase(node);
    }

    public void caseAMainClass(AMainClass node)
    {
        defaultCase(node);
    }

    public void caseAClassDecl(AClassDecl node)
    {
        defaultCase(node);
    }

    public void caseAExtendsClause(AExtendsClause node)
    {
        defaultCase(node);
    }

    public void caseAMethodDecl(AMethodDecl node)
    {
        defaultCase(node);
    }

    public void caseAArg(AArg node)
    {
        defaultCase(node);
    }

    public void caseAPreDecl(APreDecl node)
    {
        defaultCase(node);
    }

    public void caseAPostDecl(APostDecl node)
    {
        defaultCase(node);
    }

    public void caseABody(ABody node)
    {
        defaultCase(node);
    }

    public void caseAVarDecl(AVarDecl node)
    {
        defaultCase(node);
    }

    public void caseAIntArrayType(AIntArrayType node)
    {
        defaultCase(node);
    }

    public void caseARealArrayType(ARealArrayType node)
    {
        defaultCase(node);
    }

    public void caseABooleanType(ABooleanType node)
    {
        defaultCase(node);
    }

    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    public void caseARealType(ARealType node)
    {
        defaultCase(node);
    }

    public void caseAClassType(AClassType node)
    {
        defaultCase(node);
    }

    public void caseABlockState(ABlockState node)
    {
        defaultCase(node);
    }

    public void caseAIfState(AIfState node)
    {
        defaultCase(node);
    }

    public void caseAWhileState(AWhileState node)
    {
        defaultCase(node);
    }

    public void caseAPrintState(APrintState node)
    {
        defaultCase(node);
    }

    public void caseAAssignState(AAssignState node)
    {
        defaultCase(node);
    }

    public void caseAOrOprExp(AOrOprExp node)
    {
        defaultCase(node);
    }

    public void caseAAndOprExp(AAndOprExp node)
    {
        defaultCase(node);
    }

    public void caseANotOprExp(ANotOprExp node)
    {
        defaultCase(node);
    }

    public void caseAGreaterOprExp(AGreaterOprExp node)
    {
        defaultCase(node);
    }

    public void caseALessOprExp(ALessOprExp node)
    {
        defaultCase(node);
    }

    public void caseAPlusOprExp(APlusOprExp node)
    {
        defaultCase(node);
    }

    public void caseAMinusOprExp(AMinusOprExp node)
    {
        defaultCase(node);
    }

    public void caseAMultiplyOprExp(AMultiplyOprExp node)
    {
        defaultCase(node);
    }

    public void caseADivideOprExp(ADivideOprExp node)
    {
        defaultCase(node);
    }

    public void caseAIntLtExp(AIntLtExp node)
    {
        defaultCase(node);
    }

    public void caseARealLtExp(ARealLtExp node)
    {
        defaultCase(node);
    }

    public void caseATrueLtExp(ATrueLtExp node)
    {
        defaultCase(node);
    }

    public void caseAFalseLtExp(AFalseLtExp node)
    {
        defaultCase(node);
    }

    public void caseAThisExp(AThisExp node)
    {
        defaultCase(node);
    }

    public void caseASubExpExp(ASubExpExp node)
    {
        defaultCase(node);
    }

    public void caseAArrayLengthExp(AArrayLengthExp node)
    {
        defaultCase(node);
    }

    public void caseAMemFuncExp(AMemFuncExp node)
    {
        defaultCase(node);
    }

    public void caseANewIntArExp(ANewIntArExp node)
    {
        defaultCase(node);
    }

    public void caseANewRealArExp(ANewRealArExp node)
    {
        defaultCase(node);
    }

    public void caseANewObjectExp(ANewObjectExp node)
    {
        defaultCase(node);
    }

    public void caseALeftValueExp(ALeftValueExp node)
    {
        defaultCase(node);
    }

    public void caseAVarLeftValue(AVarLeftValue node)
    {
        defaultCase(node);
    }

    public void caseAFieldLeftValue(AFieldLeftValue node)
    {
        defaultCase(node);
    }

    public void caseAArrSubLeftValue(AArrSubLeftValue node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    public void caseTPre(TPre node)
    {
        defaultCase(node);
    }

    public void caseTPost(TPost node)
    {
        defaultCase(node);
    }

    public void caseTClassKey(TClassKey node)
    {
        defaultCase(node);
    }

    public void caseTExtends(TExtends node)
    {
        defaultCase(node);
    }

    public void caseTPublic(TPublic node)
    {
        defaultCase(node);
    }

    public void caseTStatic(TStatic node)
    {
        defaultCase(node);
    }

    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    public void caseTMain(TMain node)
    {
        defaultCase(node);
    }

    public void caseTNew(TNew node)
    {
        defaultCase(node);
    }

    public void caseTThis(TThis node)
    {
        defaultCase(node);
    }

    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    public void caseTLength(TLength node)
    {
        defaultCase(node);
    }

    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    public void caseTPoint(TPoint node)
    {
        defaultCase(node);
    }

    public void caseTRealLt(TRealLt node)
    {
        defaultCase(node);
    }

    public void caseTIntLt(TIntLt node)
    {
        defaultCase(node);
    }

    public void caseTMultiplyOpr(TMultiplyOpr node)
    {
        defaultCase(node);
    }

    public void caseTDivideOpr(TDivideOpr node)
    {
        defaultCase(node);
    }

    public void caseTPlusOpr(TPlusOpr node)
    {
        defaultCase(node);
    }

    public void caseTMinusOpr(TMinusOpr node)
    {
        defaultCase(node);
    }

    public void caseTGreaterOpr(TGreaterOpr node)
    {
        defaultCase(node);
    }

    public void caseTLessOpr(TLessOpr node)
    {
        defaultCase(node);
    }

    public void caseTAndOpr(TAndOpr node)
    {
        defaultCase(node);
    }

    public void caseTOrOpr(TOrOpr node)
    {
        defaultCase(node);
    }

    public void caseTNotOpr(TNotOpr node)
    {
        defaultCase(node);
    }

    public void caseTAssignOpr(TAssignOpr node)
    {
        defaultCase(node);
    }

    public void caseTLB(TLB node)
    {
        defaultCase(node);
    }

    public void caseTRB(TRB node)
    {
        defaultCase(node);
    }

    public void caseTLSq(TLSq node)
    {
        defaultCase(node);
    }

    public void caseTRSq(TRSq node)
    {
        defaultCase(node);
    }

    public void caseTLP(TLP node)
    {
        defaultCase(node);
    }

    public void caseTRP(TRP node)
    {
        defaultCase(node);
    }

    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTBlanks(TBlanks node)
    {
        defaultCase(node);
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
